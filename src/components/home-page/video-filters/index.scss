@use 'sass:math';

/* Variables and Mixins are auto-imported globally via Vite config */

// Reusable mixin for input field styles
@mixin input-field-base {
  background: var(--bg-primary);
  border-radius: $border-radius-sm;
  transition: all $transition-fast $transition-timing;

  &:hover {
    background: var(--bg-tertiary);
  }

  &:focus {
    background: var(--bg-primary);
    border-color: var(--border-focus);
    box-shadow: 0 0 0 3px var(--shadow-subtle);
  }
}

.video-filters {
  backdrop-filter: blur(10px);
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: $border-radius-md;
  box-shadow: 0 4px 16px var(--overlay-black-30);
  margin-bottom: $spacing-2xl;
  padding: $spacing-lg;
  position: relative;
  transition: all $transition-base $transition-timing;

  &::before {
    background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
    border-radius: $border-radius-md;
    content: '';
    inset: 0;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    transition: opacity $transition-base $transition-timing;
    z-index: -1;
  }

  &:hover {
    border-color: var(--primary-color);
    box-shadow: 0 6px 20px var(--shadow-primary);
    transform: translateY(-2px);

    &::before {
      opacity: 0.05;
    }
  }

  &--loading,
  &--error {
    padding: $spacing-xl;
    text-align: center;
  }

  &__container {
    display: flex;
    flex-direction: column;
    gap: $spacing-lg;
  }

  &__main-row {
    align-items: flex-start;
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-md;
  }

  &__secondary-row {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: $spacing-md;
    justify-content: space-between;
  }

  &__field {
    flex: 1 1 100%;
    min-width: 0;

    &--genre,
    &--tags,
    &--platform,
    &--package {
      flex: 1 1 calc(50% - #{math.div($spacing-sm, 2)});
      min-width: 200px;
    }
  }

  &__date-group {
    display: flex;
    flex: 1 1 auto;
    gap: $spacing-md;
  }

  &__date-input {
    flex: 1;
    max-width: 160px;
    min-width: 120px;

    input {
      @include input-field-base;

      &:hover {
        border-color: var(--border-color);
      }
    }
  }

  &__autocomplete {
    width: 100%;

    input {
      @include input-field-base;
    }
  }

  &__select {
    @include input-field-base;

    &:hover {
      border-color: var(--border-color);
    }

    &:focus-within {
      border-color: var(--border-focus);
      box-shadow: 0 0 0 3px var(--shadow-subtle);
    }
  }

  &__chip {
    background: linear-gradient(135deg, var(--gradient-start) 0%, var(--gradient-end) 50%, var(--gradient-accent) 100%);
    border-radius: $border-radius-full;
    box-shadow: 0 2px 4px var(--shadow-subtle);
    color: var(--text-light);
    font-size: $font-size-xs;
    font-weight: $font-weight-medium;
    height: $spacing-lg;
    transition: all $transition-fast $transition-timing;

    &:hover {
      box-shadow:
        0 4px 12px var(--shadow-primary),
        0 0 0 2px var(--bg-primary);
      transform: translateY(-2px) scale(1.05);
    }
  }

  &__actions {
    display: flex;
    gap: $spacing-md;
  }

  &__button {
    font-weight: $font-weight-medium;
    min-width: 80px;
    text-transform: none;
    transition: all $transition-base $transition-timing;
    white-space: nowrap;

    &--apply {
      background: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
      border: none;
      box-shadow: 0 4px 8px var(--shadow-primary);
      color: var(--text-light);
      position: relative;

      &:hover {
        background: linear-gradient(135deg, var(--gradient-end), var(--gradient-accent));
        box-shadow: 0 8px 24px var(--shadow-primary);
        transform: translateY(-2px);
      }

      &:active {
        transform: translateY(0);
      }
    }

    &--clear {
      background: var(--bg-primary);
      border: 1px solid var(--border-color);
      color: var(--text-secondary);
      position: relative;

      &:hover {
        background: var(--bg-tertiary);
        border-color: var(--primary-color);
        box-shadow: 0 4px 8px var(--shadow-subtle);
        transform: translateY(-1px);
      }

      &:active {
        transform: translateY(0);
      }
    }
  }
}

// Responsive breakpoints
@include breakpoint-up(sm) {
  .video-filters {
    &__field--genre,
    &__field--tags,
    &__field--platform,
    &__field--package {
      flex: 1 1 calc(50% - #{math.div($spacing-md, 2)});
    }

    &__date-input {
      max-width: 140px;
    }
  }
}

@include breakpoint-up(md) {
  .video-filters {
    &__main-row,
    &__secondary-row {
      gap: $spacing-lg;
    }

    &__field--genre,
    &__field--tags,
    &__field--platform,
    &__field--package {
      flex: 1 1 auto;
      min-width: 250px;
    }

    &__date-input {
      max-width: 180px;
    }
  }
}

@include breakpoint-up(lg) {
  .video-filters {
    &__field--genre,
    &__field--tags,
    &__field--platform,
    &__field--package {
      min-width: 240px;
    }
  }
}
